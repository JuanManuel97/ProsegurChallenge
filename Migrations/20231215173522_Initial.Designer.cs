// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProsegurChallenge.Data;

#nullable disable

namespace ProsegurChallenge.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20231215173522_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ProsegurChallenge.Entities.Ciudad", b =>
                {
                    b.Property<int>("IdCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PorcentajeImpuesto")
                        .HasColumnType("TEXT");

                    b.HasKey("IdCiudad");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("ProsegurChallenge.Entities.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.HasKey("IdEstado");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("ProsegurChallenge.Entities.MateriaPrima", b =>
                {
                    b.Property<int>("IdMateriaPrima")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescripcionCantidad")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.HasKey("IdMateriaPrima");

                    b.ToTable("MateriaPrimas");
                });

            modelBuilder.Entity("ProsegurChallenge.Entities.Orden", b =>
                {
                    b.Property<int>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdEstado")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdOrden");

                    b.HasIndex("IdEstado");

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("ProsegurChallenge.Entities.OrdenProducto", b =>
                {
                    b.Property<int>("IdOrden")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<int>("IdProducto")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(2);

                    b.HasKey("IdOrden", "IdProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("OrdenProductos");
                });

            modelBuilder.Entity("ProsegurChallenge.Entities.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("TEXT");

                    b.HasKey("IdProducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ProsegurChallenge.Entities.ProductoMateriaPrima", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<int>("IdMateriaPrima")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(2);

                    b.Property<decimal>("CantidadPorUnidad")
                        .HasColumnType("TEXT");

                    b.HasKey("IdProducto", "IdMateriaPrima");

                    b.HasIndex("IdMateriaPrima");

                    b.ToTable("ProductoMateriaPrimas");
                });

            modelBuilder.Entity("ProsegurChallenge.Entities.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ProsegurChallenge.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdRol")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProsegurChallenge.Entities.Orden", b =>
                {
                    b.HasOne("ProsegurChallenge.Entities.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("ProsegurChallenge.Entities.OrdenProducto", b =>
                {
                    b.HasOne("ProsegurChallenge.Entities.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProsegurChallenge.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ProsegurChallenge.Entities.ProductoMateriaPrima", b =>
                {
                    b.HasOne("ProsegurChallenge.Entities.MateriaPrima", "MateriaPrima")
                        .WithMany()
                        .HasForeignKey("IdMateriaPrima")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProsegurChallenge.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MateriaPrima");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ProsegurChallenge.Entities.Usuario", b =>
                {
                    b.HasOne("ProsegurChallenge.Entities.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ProsegurChallenge.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
